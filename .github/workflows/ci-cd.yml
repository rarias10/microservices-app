name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'services/**'
      - 'frontend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'services/**'
      - 'frontend/**'
  workflow_dispatch:
    inputs:
      services:
        description: 'Services to build (comma-separated: auth-service,user-service,frontend or all)'
        required: true
        default: 'all'
        type: string

env:
  REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-push:
    needs: []
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        include:
          - service: auth-service
            context: ./services/auth-service
            changed-files: services/auth-service/**
          - service: user-service
            context: ./services/user-service
            changed-files: services/user-service/**
          - service: frontend
            context: ./frontend
            changed-files: frontend/**
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check for changes or manual trigger
      uses: dorny/paths-filter@v2
      id: changes
      if: github.event_name == 'push'
      with:
        filters: |
          changed:
            - '${{ matrix.changed-files }}'
    
    - name: Check manual service selection
      id: manual
      if: github.event_name == 'workflow_dispatch'
      run: |
        SERVICES="${{ github.event.inputs.services }}"
        if [[ "$SERVICES" == "all" ]] || [[ "$SERVICES" == *"${{ matrix.service }}"* ]]; then
          echo "build=true" >> $GITHUB_OUTPUT
        else
          echo "build=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Log in to Docker Hub
      if: (github.event_name == 'push' && steps.changes.outputs.changed == 'true') || (github.event_name == 'workflow_dispatch' && steps.manual.outputs.build == 'true')
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
    
    - name: Extract metadata
      if: (github.event_name == 'push' && steps.changes.outputs.changed == 'true') || (github.event_name == 'workflow_dispatch' && steps.manual.outputs.build == 'true')
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_USERNAME }}/${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      if: (github.event_name == 'push' && steps.changes.outputs.changed == 'true') || (github.event_name == 'workflow_dispatch' && steps.manual.outputs.build == 'true')
      uses: docker/build-push-action@v4
      with:
        context: ${{ matrix.context }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  security-scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    strategy:
      matrix:
        service: [auth-service, user-service, frontend]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.DOCKER_USERNAME }}/${{ matrix.service }}:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-results-${{ matrix.service }}.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results-${{ matrix.service }}.sarif'

